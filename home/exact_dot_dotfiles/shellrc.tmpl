#!/usr/bin/env bash
# chezmoi:template:left-delimiter="#{" right-delimiter="}#"

printf '\033[?12l' # disable cursor blink

export HISTSIZE=10000

if [[ -n "$STARSHIP_CONFIG" ]]; then
  STARSHIP_CONFIG="$(eval echo "$STARSHIP_CONFIG")"
  export STARSHIP_CONFIG
fi

function cygpath() {
  if [[ "$OS" == *_NT* ]]; then
    command cygpath "$@"
  else
    for last in "$@"; do :; done
    echo "$last"
  fi
}

function _git_override() {
  if [[ "$1" == "config" && "$*" != *"--help"* ]]; then
    shift 1
    command git cf "$@"
  else
    command git "$@"
  fi
}

function _silent_background() {
  ("$@" &>/dev/null &)
}

if [[ -n "$NVIM" ]]; then
  export EDITOR="$HOME/.dotfiles/scripts/nvim-nested"

  function _nvim_remote() {
    command nvim --clean --headless --server "$NVIM" "$@"
  }

  function _load_nvim_env() {
    local env
    env="$(_nvim_remote \
      --remote_expr "v:lua.fn.get_my_config_json('env')" 2>&1)"
    if [[ "$env" != "null" ]]; then
      env="$(printf "%s" "$env" \
        | jq -r "to_entries[] | \"\\(.key)='\\(.value)'\"")"
      local old_path="$PATH"
      eval "export $env"
      local new_path="$PATH"
      PATH="$old_path"
      PATH=$(cygpath -pu "$new_path")
      export PATH
    fi
  }

  function cd() {
    local dir
    builtin cd "$@" || return $?
    dir="$(cygpath -m "$PWD")"
    _silent_background _nvim_remote --remote-expr \
      "v:lua.fn.set_terminal_dir(\"$dir\")"
  }

  function git() {
    _git_override "$@" || return $?
    _silent_background _nvim_remote --remote-expr "v:lua.fn.refresh_git_info()"
  }

  function nvim() {
    if [ $# -eq 0 ]; then
      local dir
      dir="$(cygpath -m "$PWD")"
      _nvim_remote --remote-expr \
        "v:lua.fn.open_workspace(\"$dir\")" &>/dev/null \
        || return $?
      _load_nvim_env
    else
      local opts
      opts="$*"
      while [ $# -gt 0 ]; do
        case "$1" in
        -h|--help)
          printf "Usage:\n  nvim [file]\tEdit file\n"
          return
          ;;
        -v|--version)
          command nvim --version
          return
          ;;
        *)
          shift
          ;;
        esac
      done
      _nvim_remote --remote-expr "v:lua.fn.open_tab(\"$opts\")" &>/dev/null \
        || return $?
      _load_nvim_env
    fi
  }

  function workspace() {
    source "$HOME/.dotfiles/scripts/workspace"
    nvim
  }

  function exit() {
    _nvim_remote --remote-send "<cmd>quitall<CR>"
  }
else
  export EDITOR="nvim"

  function git() {
    _git_override "$@"
  }

  function nvim() {
    if [[ $# -eq 0 ]]; then
      command nvim +"TerminalModeStart nvim"
    else
      command nvim "$@"
    fi
  }

  function workspace() {
    source "$HOME/.dotfiles/scripts/workspace"
  }
fi

# General aliases

function dart() {
  if [[ ! -f "$PWD/.fvm/fvm_config.json" ]]; then
    command dart "$@" || return $?
    echo -e "\n\e[33m\e[1mWARN:\e[0m\e[33m FVM configuration not found. Did you forget to run \`fvm use <version>\`?\e[0m"
  else
    fvm dart "$@"
  fi
}

function flutter() {
  if [[ ! -f "$PWD/.fvm/fvm_config.json" ]]; then
    command flutter "$@" || return $?
    echo -e "\n\e[33m\e[1mWARN:\e[0m\e[33m FVM configuration not found. Did you forget to run \`fvm use <version>\`?\e[0m"
  else
    fvm flutter "$@"
  fi
}

function onepub() {
  if [[ ! -f "$PWD/.fvm/fvm_config.json" ]]; then
    command onepub "$@" || return $?
    echo -e "\n\e[33m\e[1mWARN:\e[0m\e[33m FVM configuration not found. Did you forget to run \`fvm use <version>\`?\e[0m"
  else
    fvm onepub "$@"
  fi
}

alias c='cd'
alias cat='bat'
alias e='nvim'
alias g='git'
alias l='ls'
alias vim='nvim'
alias w='workspace'
alias ws='workspace'

# Config aliases

alias ce='cd ~/.local/share/chezmoi && nvim'

# Git aliases

function ga() {
  git add -N "*$**" && git ap "*$**"
}

alias gb='git branch'

function gc() {
  source "$HOME/.dotfiles/scripts/git-commit-message"
}

alias go='git cf'
alias gp='git pu'

function gr() {
  git rs "*$**"
}

function grs() {
  git rss "*$**"
}

alias gs='git st'
alias gu='git pull'
alias gw='git sw'

#{- if eq .chezmoi.os "windows" }#
alias npm="cmd -c npm.cmd"
#{- else if eq .chezmoi.os "darwin" }#
alias pip="pip3"
alias python="python3"
alias studio="open -a /Applications/Android\ Studio.app"
#{- end }#

# vim: filetype=sh

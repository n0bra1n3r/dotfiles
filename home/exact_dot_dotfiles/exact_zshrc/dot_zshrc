# vim: filetype=zsh

source ~/.dotfiles/shellrc

if [[ -d ~/.dotfiles/deps/zsh ]]; then
  export fpath=(~/.dotfiles/deps/zsh/.local/usr/share/zsh/functions/* $fpath)
  export module_path=(~/.dotfiles/deps/zsh/.local/usr/lib/zsh/* $module_path)
fi

export fpath=(~/.dotfiles/zshrc/functions $fpath)

if [[ "$OS" != *"_NT"* ]]; then
  autoload -Uz compinit && compinit
fi
autoload -U up-line-or-beginning-search
autoload -U down-line-or-beginning-search

zle -N up-line-or-beginning-search
zle -N down-line-or-beginning-search

bindkey "^[[A" up-line-or-beginning-search
bindkey "^[[B" down-line-or-beginning-search

export HISTFILE=~/.zsh_history
export SAVEHIST=$HISTSIZE
export SHELL_SESSIONS_DISABLE=1

setopt APPEND_HISTORY
setopt HIST_IGNORE_SPACE
setopt HIST_IGNORE_ALL_DUPS
setopt INC_APPEND_HISTORY

source ~/.dotfiles/deps/zsh-autosuggestions/.dotfiles/zsh-autosuggestions-master/zsh-autosuggestions.zsh

export ZSH_AUTOSUGGEST_STRATEGY=(history completion)
export ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20

if [[ ! -z "$NVIM" ]]; then
  autoload -U add-zsh-hook

  function _nvim_precmd() {
    _silent_background _nvim_remote --remote-expr \
      "v:lua.fn.set_shell_active(v:true, \"$1\")"
  }

  function _nvim_postcmd() {
    local cmd=$history[$((HISTCMD - 1))]
    _silent_background _nvim_remote --remote-expr \
      "v:lua.fn.set_shell_active(v:false, \"$cmd\", $?)"
  }

  add-zsh-hook preexec _nvim_precmd
  add-zsh-hook precmd _nvim_postcmd
fi

function _workspace() {
  reply=()
  if command git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    local locals="$(command git for-each-ref \
      --sort=-committerdate \
      --format='%(refname:lstrip=2)' \
      refs/heads/)"
    local current="$(command git branch --show-current)"
    reply=($(echo -e $locals | grep -v HEAD | grep -v "$current"))
  fi
}

compctl -K _workspace -V workspaces workspace

[[ -f ~/.zshrc ]] && source ~/.zshrc

eval "$(starship init zsh)"
